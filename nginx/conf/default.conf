# HTTP Server Block â€“ Redirect all HTTP traffic to HTTPS
server {
    listen 80;
    server_name chimerastack.com www.chimerastack.com;

    # Redirect HTTP to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }

    # Let's Encrypt verification
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
}

# HTTPS Server Block
server {
    listen 443 ssl;
    server_name chimerastack.com www.chimerastack.com;

    ssl_certificate /etc/letsencrypt/live/chimerastack.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/chimerastack.com/privkey.pem;

    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_session_cache shared:SSL:10m;

    # Debug logging
    error_log /var/log/nginx/debug.log debug;

    # Proxy all non-API traffic to the frontend container
    location / {
        proxy_pass http://chimera_frontend:80;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # PHP Files should go to backend
    location ~ \.php$ {
        proxy_pass http://chimera_backend:80;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Proxy API requests to the backend container
    location /api/ {
        # Forward to backend without preserving the /api prefix
        rewrite ^/api/(.*) /$1 break;
        proxy_pass http://chimera_backend:80;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Direct test endpoint for debugging
    location = /test {
        return 200 '{"status":"ok","message":"Nginx is working"}';
        add_header Content-Type application/json;
    }

    # Serve template download files (from backend)
    location /downloads {
        alias /var/www/html/downloads;
        add_header Content-Disposition "attachment";
    }

    # Let's Encrypt challenge location (if needed for renewal)
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
}