services:
  nginx:
    image: nginx:alpine
    container_name: chimera_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/www:/var/www/html
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - frontend
      - backend
      - phpmyadmin
    networks:
      - chimera_network
    restart: always

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: chimera_frontend
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=https://chimerastack.com/api
    networks:
      - chimera_network
    restart: always
    volumes:
      - frontend-build:/app/build

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: chimera_backend
    volumes:
      - ./backend/src:/var/www/html
      - ./backend/logs:/var/log
      - ./backend/downloads:/var/www/html/downloads
      # Optional: remove this mount if the backend does not need direct access to the schema.
      - ./database/schema:/var/www/schema
    environment:
      - PHP_ENVIRONMENT=production
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DB=${MYSQL_DB}
      - JWT_SECRET=${JWT_SECRET}
      - MINIMAL_API=1
      - BACKEND_BASE_URL=${BACKEND_BASE_URL}
      - ALLOWED_ORIGIN=${ALLOWED_ORIGIN}
    depends_on:
      - mysql
    networks:
      - chimera_network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/test.php"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  mysql:
    image: mysql:8.0
    container_name: chimera_mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d
      # Optional: mount schema for inspection if needed.
      - ./database/schema:/var/www/schema
    networks:
      - chimera_network
    restart: always
    healthcheck:
      test:
        - CMD
        - mysqladmin
        - ping
        - -h
        - localhost
        - -u
        - root
        - -p${MYSQL_ROOT_PASSWORD}
      interval: 10s
      timeout: 5s
      retries: 5

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: chimera_phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_PASSWORD}
      UPLOAD_LIMIT: 100M
    depends_on:
      - mysql
    networks:
      - chimera_network
    restart: always

networks:
  chimera_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  frontend-build:
    driver: local
