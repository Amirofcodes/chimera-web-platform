# In frontend/Dockerfile.prod
FROM node:18-alpine as build

WORKDIR /app

# Copy package files
COPY package*.json ./
RUN npm ci --only=production

# Copy app files
COPY . .

# Build for production
ENV NODE_ENV=production
RUN npm run build:css
RUN npm run build

# Production image
FROM nginx:alpine

# Copy build files from build stage
COPY --from=build /app/build /usr/share/nginx/html

# Create a custom nginx config directly in the Dockerfile
RUN echo 'server { \
    listen 80; \
    server_name chimerastack.com www.chimerastack.com; \
    \
    location / { \
        proxy_pass http://frontend:80; \
        proxy_http_version 1.1; \
        proxy_set_header Host $host; \
        proxy_set_header X-Real-IP $remote_addr; \
    } \
    \
    location /api { \
        proxy_pass http://backend:80; \
        proxy_http_version 1.1; \
        proxy_set_header Host $host; \
        proxy_set_header X-Real-IP $remote_addr; \
    } \
    \
    location /downloads { \
        alias /var/www/html/downloads; \
        add_header Content-Disposition "attachment"; \
    } \
}' > /etc/nginx/conf.d/default.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]
