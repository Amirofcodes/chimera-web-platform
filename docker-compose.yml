networks:
  app_network:
    driver: bridge
    name: chimera-web-platform_network

services:
  backend:
    build:
      context: ./backend
    container_name: chimera-web-platform-backend
    depends_on:
      - mysql
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DB=${MYSQL_DB}
      - JWT_SECRET=${JWT_SECRET}
      - PHP_ENVIRONMENT=development
      - PHP_DEBUG=true
      - MINIMAL_API=1
    command: php -S 0.0.0.0:80 -t /var/www/html
    networks:
      - app_network
    ports:
      - "8000:80"
    volumes:
      - ./backend/src:/var/www/html
      - ./backend/logs:/var/log
      - ./backend/downloads:/var/www/html/downloads
      # Optional: if your app does not need direct access to schema files, you can remove this mount.
      - ./database/schema:/var/www/schema
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/test.php"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  frontend:
    build:
      context: ./frontend
    container_name: chimera-web-platform-frontend
    depends_on:
      - backend
    environment:
      - REACT_APP_PORT=3000
      - REACT_APP_BACKEND_PORT=8000
      - REACT_APP_MYSQL_PORT=3300
      - REACT_APP_PHPMYADMIN_PORT=8081
      - REACT_APP_API_URL=http://localhost:8000/api
      - WDS_SOCKET_HOST=0.0.0.0
      - WDS_SOCKET_PORT=3000
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    networks:
      - app_network
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules

  mysql:
    container_name: chimera-web-platform-mysql
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
    networks:
      - app_network
    ports:
      - "3300:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      # Mount unified initialization scripts for database creation.
      - ./database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 3s
      retries: 3

  phpmyadmin:
    container_name: chimera-web-platform-phpmyadmin
    image: phpmyadmin/phpmyadmin
    depends_on:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PASSWORD: ${MYSQL_PASSWORD}
      PMA_USER: ${MYSQL_USER}
      UPLOAD_LIMIT: 50M
    networks:
      - app_network
    ports:
      - "8081:80"

volumes:
  mysql_data:
    driver: local
