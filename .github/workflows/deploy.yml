name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci
      - name: Run frontend tests
        run: |
          cd frontend
          npm run test -- --passWithNoTests --watchAll=false
      - name: Check TypeScript compilation
        run: |
          cd frontend
          npm run tsc || npm run tsc --noEmit || echo "TypeScript check skipped"

  build-and-deploy:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: unnecessary
          if_key_exists: replace
          
      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
      
      - name: Install rsync
        run: sudo apt-get update && sudo apt-get install -y rsync
        
      - name: Prepare deployment directories and files
        run: |
          # Remove problematic directories that shouldn't be deployed
          rm -rf ./backend/logs/apt
          
          # Ensure template zip files exist in downloads directory
          mkdir -p ./backend/downloads
          touch ./backend/downloads/.gitkeep
          
      - name: Setup remote directories with proper permissions
        run: |
          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "sudo mkdir -p /var/www/chimerastack/backend/logs /var/www/chimerastack/backend/downloads && sudo chmod -R 755 /var/www/chimerastack && sudo chown -R ${{ secrets.VPS_USER }}:${{ secrets.VPS_USER }} /var/www/chimerastack"
      
      - name: Deploy to server using rsync
        run: |
          rsync -avz --delete --exclude '.git' \
                              --exclude '.github/workflows' \
                              --exclude 'node_modules' \
                              --exclude '.env' \
                              --exclude '.DS_Store' \
                              ./ ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/var/www/chimerastack/
      
      - name: Restart containers
        run: |
          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "cd /var/www/chimerastack && sudo docker-compose -f docker-compose.prod.yml down || true && sudo docker-compose -f docker-compose.prod.yml up -d --build"

      - name: Verify deployment
        run: |
          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "sudo docker ps | grep chimera || echo 'No chimera containers found'"