name: CI/CD Pipeline

# Trigger pipeline on main branch pushes and all pull requests
on:
 push:
   branches: [main]
 pull_request:
   branches: [main]

jobs:
 # Test job: Runs frontend tests and type checks
 test:
   runs-on: ubuntu-latest
   steps:
     - uses: actions/checkout@v3
     - name: Set up Node.js
       uses: actions/setup-node@v3
       with:
         node-version: "18"
         cache: "npm"
         cache-dependency-path: frontend/package-lock.json
     - name: Install frontend dependencies
       run: |
         cd frontend
         npm ci
     - name: Run frontend tests
       run: |
         cd frontend
         npm test -- --coverage --watchAll=false
     - name: Check TypeScript compilation
       run: |
         cd frontend
         npm run tsc || npm run tsc --noEmit || echo "TypeScript check skipped"

 # Deploy job: Runs only on successful main branch pushes
 build-and-deploy:
   needs: test
   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
   runs-on: ubuntu-latest
   steps:
     - uses: actions/checkout@v3
     - name: Install SSH key
       uses: shimataro/ssh-key-action@v2
       with:
         key: ${{ secrets.SSH_PRIVATE_KEY }}
         known_hosts: unnecessary
         if_key_exists: replace
     - name: Adding Known Hosts
       run: ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
     - name: Create necessary directories
       run: |
         ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "mkdir -p /var/www/chimerastack/backend/logs /var/www/chimerastack/backend/downloads"
     - name: Deploy files
       # Sync files to production server, excluding unnecessary files
       run: |
         rsync -avz --delete \
                --exclude='.git/' \
                --exclude='node_modules/' \
                --exclude='.env' \
                --exclude='**/logs/**' \
                --exclude='backend/downloads/' \
                ./ ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/var/www/chimerastack/
     - name: Restart containers
       # Restart Docker containers with production configuration
       run: |
         ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "cd /var/www/chimerastack && docker-compose -f docker-compose.prod.yml down && docker-compose -f docker-compose.prod.yml up -d --build"
     - name: Verify deployment
       # Check if containers are running properly after deployment
       run: |
         ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "docker ps | grep chimera && echo 'Deployment successful' || echo 'Containers not running'"